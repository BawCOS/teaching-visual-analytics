[
["index.html", "Lesson Modules for Teaching Visual Analytics Preface", " Lesson Modules for Teaching Visual Analytics Bradley Warner David Ebert 2018-03-08 Preface http://socviz.co/lookatdata.html http://serialmentor.com/dataviz/ "],
["who-is-this-book-for.html", "0.1 Who is this book for?", " 0.1 Who is this book for? "],
["book-structure-and-how-to-use-it.html", "0.2 Book Structure and How to Use It", " 0.2 Book Structure and How to Use It Introduction: This is a work is the result of an effort between the VACCINE lab at Purdue University and the United States Air Force Academy to develop a smaller set of lesson to introduce the field of visual analytics (VA). Since many institutions do not have the resources to offer complete courses on VA, it was decided that standalone lessons plans have the potential for more use and dissemination. Intent: These modules are designed to help participants: Understand the definition and value of visual analytics Explain and use design principles for visual analytics Use visual analytics to explore and reach a decision for a problem Use: The first chapter is a short introduction to visual analytics. It starts with a question, which can be understood to be the analytic reasoning leg of the visual analytics cycle. The second chapter is also an introduction to visual analytics but it takes more of a hypothesis generating point of view and thus has more emphasis on visualization and interaction. The third chapter is an in-depth chapters give in-depth lessons into each of the three knowledge areas, analytic reasoning, visualization, and interaction. "],
["prerequisites.html", "0.3 Prerequisites", " 0.3 Prerequisites WHY USE R what if you don’t want to These notes make use of the following packages in R knitr (Xie 2017b), rmarkdown (Allaire et al. 2017), fastR (Pruim 2017), Hmisc (Harrell 2018), lattice (Sarkar 2017), vcd (Meyer, Zeileis, and Hornik 2017), ggplot2 (Wickham and Chang 2016), MASS (Ripley 2017), TeachingDemos (Snow 2016), Stat2Data (Lock 2013), car (Fox and Weisberg 2017), DT (Xie 2016),crosstalk (Cheng 2016), leaflet (Cheng, Karambelkar, and Xie 2017), plotly (Sievert et al. 2017). References "],
["acknowledgements.html", "0.4 Acknowledgements", " 0.4 Acknowledgements The workshop, GT, UCGA, Purdue, USAFA …. This book was written using the excellent bookdown package (Xie 2017a). This book is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License. References "],
["Chpt1.html", "Chapter 1 Introducing Visual Analytics - Emphasis on Analytic Reasoning", " Chapter 1 Introducing Visual Analytics - Emphasis on Analytic Reasoning “The purpose of computing is insight, not numbers.” – Richard Hamming “The simple graph has brought more information to the data analyst’s mind than any other device.” — John Tukey This chapter is a short introduction to visual analytics. It starts with a question, which can be understood to be the analytic reasoning leg of the visual analytics cycle. The second chapter is also an introduction to visual analytics but it takes more of a hypothesis generating point of view and thus has more emphasis on visualization and interaction. The depth that you as the instructor use depends on how much time can be devoted to this lesson. This lesson could be done in a little as 30 minutes or as much as three 50 minute lessons. These notes are broken into sections. Under each section are some combination of definitions, explanations, discussion ideas, and problems as needed. You can drop portions or entire sections as needed or dictated by time. Many of the ideas for this chapter come from friendly’s excellent book on the analysis of discrete data (Friendly and Meyer 2016). References "],
["pre-class-notes.html", "1.1 Pre-Class Notes", " 1.1 Pre-Class Notes Objectives After the training, participants will: be able to define and explain visual analytics be able to describe the three important components of visual analytics be able to discuss types of unique insights that visual analytics can provide Preparation Prior to class: Watch the Beauty of Data Visualization - David McCandless Watch TEDxWaterloo - Miriah Meyer - Information Visualization for Scientific Discovery Read the article Visual Analytics: Definition, Process, and Challenges by Daniel Keim, Gennady Andrienko, Jean-Daniel Fekete, Carsten Gorg,Jorn Kohlhammer, and Guy Melan "],
["Intro1.html", "1.2 Lesson Introduction", " 1.2 Lesson Introduction Suggestions to start the lesson: Have the participants discuss the videos and explain insights gained for the preparation work.. One of the objectives is to define and explain visual analytics. A useful definition is (this can be given or developed by asking students for input): Visual analytics is the science of analytical reasoning facilitated by interactive visual interfaces. Discussion ideas and points for this portion of the lesson include: The goal of visual analytics is to create software systems that will support the analytical reasoning process. Visual analytics can be broken down into a form of analytical reasoning that relies on visual displays that are interactive. We must in turn explore and understand analytical reasoning, visual representation of data, and interactive interfaces. This is a lead into the rest of this lesson. Below is a diagram of the visual analytics process. It is a cycle where any one particular step can be a starting point, and ending point, and a transition point to another area of the cycle. For this lesson we will assume you start with a hypothesis and thus start with analytical reasoning. It is important to note that this is not always the case. You could start with data visualization in an exploratory manner and then move to either analytic reasoning or data visualization. "],
["AR1.html", "1.3 Analytic Reasoning", " 1.3 Analytic Reasoning This section introduces the concept of analytic reasoning and then uses an example to illustrate the ideas. 1.3.1 Analytic Reasoing Explained The goal of analysis is to make a decision about a question. This question can be part of a larger analysis problem with many questions. Analytic reasoning requires reasoning logically with the support of numeric evidence. The analyst must understand the limitations of the data and the assumptions of the data transformations and summaries. Again it is important to note that analytics reasoning works in conjunction, not separate from, visualization and interaction. In other words, visual analytics takes analytical reasoning further by taking advantages of a visual and interactive representation of data to aid in the creation of knowledge products or actions. Many analytical tasks follow a process of • Information gathering • Re-representation of the information in a form that aids analysis • Development of insight through the manipulation of this representation • Creation of some knowledge product or direct action based on the knowledge insight. 1.3.2 Example We will introduce an example to highlight the ideas and principles of analytic reasoning. The example we selected is easy to understand and allows us to present some of the important concepts of visual analytics. You can pick an example of your own, but remember to keep it simple and easy to understand. 1.3.2.1 Problem: Often in baseball, teams and fans want to compare players. In the 1990s two extraordinary players were Derek Jeter of the New York Yankees and David Justice of the Atlanta Braves. 1.3.2.2 Question: Who was the better baseball player? Take some time and discuss how to answer the question. 1.3.2.3 Discussion ideas: There are many ways to try to answer this question. Someone might say that Jetter was paid more therefore he is better. Or someone would say that the Yankees are a better team and thus Jetter is better. This is known as butterfly reasoning. Typically students will not use an analytic reasoning process but more of an intuition or perhaps just a bias. We have forced the students into an intuitive answer which will likely be based on biases and not empirical evidence. Next we will guide the students further along the path of analytic reasoning by narrowing the scope of the problem and introducing data. 1.3.3 Second Example As another example, but this time using a social context, is the University of California - Berkeley admission bias question. Running this as a lesson would look like this: 1.3.3.1 Problem: In the early 1970s there was a concern that the University of California - Berkeley was discriminating in its admissions process based on gender. Question: How do we decide if Cal-Berkeley is practicing discrimination based on gender? Take some time and discuss how to answer the question. 1.3.3.2 Discussion ideas: There are many ways to try to answer this question. Someone might say that Berkeley had to be because this was the early 1970s and we know that institutional bias against women was common. This is known as butterfly reasoning. This is not analytical reasoning. We must collect some data that will help us in deciding the answer. In practice the is an iterative process. 1.3.4 Other problem ideas: In mathematics, deciding if a function is continuous at a point. Generate a visual of a function and have an epsilon selected at random. The decision maker must determine if there is a delta such that for all the points inside delta of x, the function is within epsilon of the limit. In political science, we could use voter data to ask questions about coastal states versus central states. In biology, we could look at sports data such as Olympic race times. In engineering, we can look at strength of materials, completion times of projects, or design selection. 1.3.5 Using Analytic Reasoning. We need data and a metric to help us answer the question of who is the better batter. There are many different ways to gather the data but this should be based on the metric we use. In sports analytics, there are many metrics that can be used to compare players, but for ease and the sake of an interesting analysis, we will use batting average. To make the problem even easier, we will provide the raw data from the years 1995 and 1996. Some students may object to this simplified data and you can use these objections as points of discussion on the importance of data that represents the question being asked. 1.3.5.1 Information Gathering Here is the code to generate the raw data for both batters. The reason we are generating the data is that we simply have the summary data from the records and this is not how data is often obtained. The information gathering and cleaning can often represent a significant time investment. This is often lost on students as data is presented to them in a clean format because of class time concerns. To give the students a sense of the work involved, generate the raw data using the code below, and then give the csv file to them. First, we will generate a simple frequency form of the data, we are actually working backwards from how you would typically proceed in your analysis but this is done to save you time as an instructor. For this section we will need several packages; let’s load them first. library(vcd) library(vcdExtra) library(dplyr) MLB_freq&lt;-data.frame(expand.grid(Player=c(&quot;Derek Jetter&quot;,&quot;David Justice&quot;), Year=c(&quot;1995&quot;,&quot;1996&quot;),Result=c(&quot;Hit&quot;,&quot;Out&quot;)), count=c(12,104,183,45,48-12,411-104,582-183,140-45)) knitr::kable(MLB_freq) Player Year Result count Derek Jetter 1995 Hit 12 David Justice 1995 Hit 104 Derek Jetter 1996 Hit 183 David Justice 1996 Hit 45 Derek Jetter 1995 Out 36 David Justice 1995 Out 307 Derek Jetter 1996 Out 399 David Justice 1996 Out 95 MLB_long&lt;-expand.dft(MLB_freq,freq=&quot;count&quot;) head(MLB_long) ## Player Year Result ## 1 Derek Jetter 1995 Hit ## 2 Derek Jetter 1995 Hit ## 3 Derek Jetter 1995 Hit ## 4 Derek Jetter 1995 Hit ## 5 Derek Jetter 1995 Hit ## 6 Derek Jetter 1995 Hit Now let’s random shuffle to give the appearance of collected data. Note: we are using the dplyr package to complete this work. table(MLB_long$Year) ## ## 1995 1996 ## 459 722 set.seed(81) MLB_long&lt;-MLB_long %&gt;% sample_frac() %&gt;% arrange(Year) head(MLB_long) ## Player Year Result ## 1 Derek Jetter 1995 Hit ## 2 David Justice 1995 Out ## 3 David Justice 1995 Out ## 4 David Justice 1995 Hit ## 5 David Justice 1995 Out ## 6 David Justice 1995 Out table(MLB_long) ## , , Result = Hit ## ## Year ## Player 1995 1996 ## David Justice 104 45 ## Derek Jetter 12 183 ## ## , , Result = Out ## ## Year ## Player 1995 1996 ## David Justice 307 95 ## Derek Jetter 36 399 Now to get the data to students you could use the write.csv function write.csv(MLB_long,&quot;./data/batting.csv&quot;) 1.3.5.2 Transformation (Re-representation) of Data The data is not in a form that will help make a decision. It is important to ask the students how they would transform the data to help make a decision. There are typically two responses to this request. The first is to get the batting averages for the two players. The second is to summarize the batting averages by each player within each year. This then begs the question of how to aggregate the two years. At this point, try to steer the students to comparing the batting averages within each year. They will note that David Justice has the higher in each year. The next question is how to transform this information into a single metric of overall batting averages. Also note at this point that our transformation is in the form of descriptive numeric summaries. This is often an important first step but in the next section we will work with visual representations of the data. Now, let’s first get the batting average for each year. 1.3.5.3 Problem How should we transform, summarize, the data in a manner that will help us make a decision? 1.3.5.3.1 Discussion Ideas There are many ways to summarize the data. The problem is that we have hits and outs whereas we need total at bats. If we create summary, we will not get an appropriate metric of performance. summary(MLB_long) ## Player Year Result ## David Justice:551 Min. :1995 Hit:344 ## Derek Jetter :630 1st Qu.:1995 Out:837 ## Median :1996 ## Mean :1996 ## 3rd Qu.:1996 ## Max. :1996 We are going have to transform the data. The first step would be to group the data by each of the variables. MLB_long %&gt;% dplyr::group_by(Year,Player,Result) %&gt;% dplyr::summarize(Total=n()) ## # A tibble: 8 x 4 ## # Groups: Year, Player [?] ## Year Player Result Total ## &lt;int&gt; &lt;fctr&gt; &lt;fctr&gt; &lt;int&gt; ## 1 1995 David Justice Hit 104 ## 2 1995 David Justice Out 307 ## 3 1995 Derek Jetter Hit 12 ## 4 1995 Derek Jetter Out 36 ## 5 1996 David Justice Hit 45 ## 6 1996 David Justice Out 95 ## 7 1996 Derek Jetter Hit 183 ## 8 1996 Derek Jetter Out 399 Or using different code knitr::kable(xtabs(~Player+Result+Year,MLB_long),caption = &quot;A Simple Table Summarizing Batting Performance&quot;) Table 1.1: A Simple Table Summarizing Batting Performance Player Result Year Freq David Justice Hit 1995 104 Derek Jetter Hit 1995 12 David Justice Out 1995 307 Derek Jetter Out 1995 36 David Justice Hit 1996 45 Derek Jetter Hit 1996 183 David Justice Out 1996 95 Derek Jetter Out 1996 399 This is a good first step but students will have to mentally try to find the total at bats, sum hits and outs, and then divide hits by at bats; see Table 1.1 and the simple table below it. As a preview of the visualization section, consider the following table and think about how it presents the information. ftable(xtabs(~Player+Year+Result,MLB_long)) ## Result Hit Out ## Player Year ## David Justice 1995 104 307 ## 1996 45 95 ## Derek Jetter 1995 12 36 ## 1996 183 399 It should be clear that it is hard to use these summaries to make a decision. In the next section we will discuss visualizing data to include the advantages and disadvantages of each type of table. But for now let’s complete the discussion of comparing batting averages. Next we need to get a batting average for each player in each year. prop.table(xtabs(~Player+Year+Result,MLB_long),1:2)[,,1] ## Year ## Player 1995 1996 ## David Justice 0.2530414 0.3214286 ## Derek Jetter 0.2500000 0.3144330 or as in Table 1.2. knitr::kable(MLB_long %&gt;% group_by(Player,Year,Result) %&gt;% summarise(Hits=n()) %&gt;% filter(Result==&quot;Hit&quot;) %&gt;% left_join(MLB_long %&gt;% group_by(Player,Year) %&gt;% summarise(At_Bats=n()),by=c(&quot;Player&quot;,&quot;Year&quot;)) %&gt;% select(-Result) %&gt;% mutate(Avg=round(Hits/At_Bats,4)) %&gt;% select(Player,Year,Avg) %&gt;% arrange(Year,desc(Player)),caption=&quot;Batting Average in each Year&quot;) Table 1.2: Batting Average in each Year Player Year Avg Derek Jetter 1995 0.2500 David Justice 1995 0.2530 Derek Jetter 1996 0.3144 David Justice 1996 0.3214 1.3.5.4 Discussion Ideas Ask the students to decide who is the better player based on the batting averages. The students should point out that David Justice had a better batting average in each year. You can ask how you should combine these averages? The students may claim that it does not matter since David Justice was better in each year. They may also want to take a simple average, which again would lead to David Justice being the better player. Other students will note that the overall batting average is found by dividing totals hits by total at bats. Let’s combine the hits and outs from each year by aggregating across years. prop.table(xtabs(~Player+Result,MLB_long),1)[,1] ## David Justice Derek Jetter ## 0.2704174 0.3095238 knitr::kable(MLB_long %&gt;% group_by(Player,Result) %&gt;% summarise(Hits=n()) %&gt;% filter(Result==&quot;Hit&quot;) %&gt;% left_join(MLB_long %&gt;% group_by(Player) %&gt;% summarise(Total=n()),by=&quot;Player&quot;) %&gt;% select(-Result) %&gt;% mutate(Avg=round(Hits/Total,4)) %&gt;% select(Player,Avg) %&gt;% arrange(desc(Player)),caption=&quot;Combined Batting Average for Both Years&quot;) Table 1.3: Combined Batting Average for Both Years Player Avg Derek Jetter 0.3095 David Justice 0.2704 From Table 1.3 it now appears that Derek Jetter is the better player. Who is the better player? Why did we get different results depending on the summary? What concerns do you have with the summaries and data transformations we created? "],
["visualizing-data-re-representation.html", "1.4 Visualizing data (Re-representation)", " 1.4 Visualizing data (Re-representation) We are still in the transformation or re-representation of information phase. Visualization helps in this phase of the analysis project. We will present many different types of visualizations and this is a transition to the next phase of the analysis titled manipulation. Having to write code over and over with small changes will lead us to the interaction phase. We will first address visualization. Although some authors would not consider tables as a visualization of data, we do. In this section, we will use two different forms of visualization, both a table and a vector plot. 1.4.1 Background on Visualizing Data Data visualization is a complicated and important subject. You can get advanced degrees in the subject. We will only give the basics principles and ideas in this section. There are three things that should always inform the visual summary you select and/or design. First, you must decide which ideas are important to communicate to the reader. This requires you to identify your key message, filter and summarize the data to a point that maintains that message without over-compressing the data, and finally think about how to communicate this idea. Second, what is the reader’s background and how will they understand or what will they take away from the visualization? Tufte states that you should “respect your audience”. Think about such factors as how short-term memory limits the amount of information a reader can hold and how preattentive thought quickly picks up position, motion, shape, and color first. Finally, consider the data type(s), what are the advantages and disadvantages of the data, what information is contained in the data, and what tools are needed to visualize this data? For example, color does a nice job with discrete variables although it could be used as a gradient for continuous variables. Length is good for continuous variables. Area is difficult for readers to compare although rectangular is not as difficult because of the linear comparison of each side. Figure 1.1, adopted from Friendly and Meyer (2016), is an excellent framework for thinking about visualization. Often, we first start in the analysis phase. For our current problem we are in the analysis phase with comparison being the primary design principle; we want to compare Derek Jetter to David Justice. At the end of the analysis we must present the results and this puts us in the presentation section. In each case the reader is different. In the analysis phase, we, the analyst, are the reader and maybe a few others on the analysis team. In the presentation, the readers can be from a variety of backgrounds often leading to a simpler presentation. knitr::include_graphics(&quot;./images/VisPurpose.png&quot;) Figure 1.1: Visualization Purposes 1.4.2 Using Problem In the batting average problem, we have compressed the results of individual bats into an average. There was also the choice to leave year as a separate variable or to compress further into a single summary. The compression to a batting average, weather accounting for year or not, lost an important element of the data and that is the magnitude of number of bats. Understanding our reader, in this case the analyst but ultimately any reader for presentation, we should expect that most people will consider the value of the batting averages for each player during each year to be of equal value, that is they assume that the number of at bats is approximately equal. Thus, in this example they will either compare Derek Jeter against David Justice each year or simply average the two years into a single number to make a decision on the better batter. In either case, the reader may conclude that David Justice is the better batter. In developing our visual summaries we will have to take this into consideration. 1.4.3 Discussion ideas The tables in the previous section are visual summaries but what are the limitations? What are the key idea(s) for this problem? How would you visualize this data? Most students will only think about tables. In considering tables, how should the variables be ordered? That is, which variables should be rows and which should be columns? Should you use shading in the tables? 1.4.4 Visualization We will examine two ways to visualize the data in our batting average problem. First we will continue to look at the tables and then move to a visualization that utilizes vectors. 1.4.4.1 Tables for Visualization In this section we will go through a series of tables and discuss advantages and disadvantages of each. 1.4.4.1.1 First Table The first table from the software is a default and looks like table(MLB_long) ## , , Result = Hit ## ## Year ## Player 1995 1996 ## David Justice 104 45 ## Derek Jetter 12 183 ## ## , , Result = Out ## ## Year ## Player 1995 1996 ## David Justice 307 95 ## Derek Jetter 36 399 Ask your students about their thoughts on this table. Some ideas that may come include the lack of a title, the use of “, ,”, and having the split on result because it is difficult to mentally combine for comparison. Remember that the reader of this table is the analytic team. As an analyst, the use of “, ,”&quot; in the titles and the splitting of result into two table may not bother you but it is still inefficient. Plus you as the analyst want the ability to control how the variables are arranged. 1.4.4.1.2 Additional Tables Let’s start by finding a better representation of the table. ftable(table(MLB_long)) ## Result Hit Out ## Player Year ## David Justice 1995 104 307 ## 1996 45 95 ## Derek Jetter 1995 12 36 ## 1996 183 399 The advantage of this figure did not split the data. Note that the software automatically placed Player and Year in the rows. This placement makes it difficult to compare the years since they are separated by one line. Next, we will sort the variables by the comparison we want to make. In this case we want players within years. This is called effect-ordering sorting (Friendly and Kwan 2003). ftable(table(MLB_long),row.vars=c(&quot;Year&quot;,&quot;Player&quot;)) ## Result Hit Out ## Year Player ## 1995 David Justice 104 307 ## Derek Jetter 12 36 ## 1996 David Justice 45 95 ## Derek Jetter 183 399 As we discussed in Section 1.2, the transitions between analysis, visualization, and interaction may be a cycle. So next we need to get the number of at bats. data.frame(MLB_long %&gt;% group_by(Player,Year,Result) %&gt;% summarise(Hits=n()) %&gt;% filter(Result==&quot;Hit&quot;) %&gt;% left_join(MLB_long %&gt;% group_by(Player,Year) %&gt;% summarise(At_Bats=n()),by=c(&quot;Player&quot;,&quot;Year&quot;)) %&gt;% select(-Result) %&gt;% arrange(Year)) ## Player Year Hits At_Bats ## 1 David Justice 1995 104 411 ## 2 Derek Jetter 1995 12 48 ## 3 David Justice 1996 45 140 ## 4 Derek Jetter 1996 183 582 This is getting better although we lost year as an outer row variable and we still need average instead of hits. data.frame(MLB_long %&gt;% group_by(Player,Year,Result) %&gt;% summarise(Hits=n()) %&gt;% filter(Result==&quot;Hit&quot;) %&gt;% left_join(MLB_long %&gt;% group_by(Player,Year) %&gt;% summarise(At_Bats=n()),by=c(&quot;Player&quot;,&quot;Year&quot;)) %&gt;% mutate(Average=Hits/At_Bats) %&gt;% select(Year, Player,Average,At_Bats) %&gt;% arrange(Year)) ## Year Player Average At_Bats ## 1 1995 David Justice 0.2530414 411 ## 2 1995 Derek Jetter 0.2500000 48 ## 3 1996 David Justice 0.3214286 140 ## 4 1996 Derek Jetter 0.3144330 582 This is a nice summary and makes it clear that we have years with a small number of at bats. We still have to clean up some things to improve the visualization. What are some ideas to improve it? A caption should be provided with enough detail to describe the table. In addition, the default of 7 decimal places is too much. We will use 4 decimal places. knitr::kable(data.frame(MLB_long %&gt;% group_by(Player,Year,Result) %&gt;% summarise(Hits=n()) %&gt;% filter(Result==&quot;Hit&quot;) %&gt;% left_join(MLB_long %&gt;% group_by(Player,Year) %&gt;% summarise(At_Bats=n()),by=c(&quot;Player&quot;,&quot;Year&quot;)) %&gt;% mutate(Average=round(Hits/At_Bats,4)) %&gt;% select(Year, Player,Average,At_Bats) %&gt;% arrange(Year)),caption=&quot;Batting Averages and Total at Bats for Both Years&quot;) Table 1.4: Batting Averages and Total at Bats for Both Years Year Player Average At_Bats 1995 David Justice 0.2530 411 1995 Derek Jetter 0.2500 48 1996 David Justice 0.3214 140 1996 Derek Jetter 0.3144 582 Finally, we should combine both years. It is clear that we can’t just average the averages since the total at bats is different. We need to find the total hits and divide by the total at bats. This is Table 1.3 with the addition of the total at bats. knitr::kable(MLB_long %&gt;% group_by(Player,Result) %&gt;% summarise(Hits=n()) %&gt;% filter(Result==&quot;Hit&quot;) %&gt;% left_join(MLB_long %&gt;% group_by(Player) %&gt;% summarise(At_Bats=n()),by=&quot;Player&quot;) %&gt;% select(-Result) %&gt;% mutate(Average=round(Hits/At_Bats,4)) %&gt;% select(Player,Average,At_Bats) %&gt;% arrange(desc(Player)),caption=&quot;Combined Batting Average for Both Years with Total at Bats&quot;) Table 1.5: Combined Batting Average for Both Years with Total at Bats Player Average At_Bats Derek Jetter 0.3095 630 David Justice 0.2704 551 The two players had similar number of at bats but Derek Jeter had the higher batting average. 1.4.5 Vectors for Visualization Since batting average is more a quantitative variable than a qualitative, we decided to use position to represent batting average. The x-axis is the number of batting attempts and the y-axis is the number of hits. The average is the angle, or the slope of the line. Angles are difficult to estimate but easy to compare. We used color to separate the two batters only for the combined years. We included the individual year breakdown but they are difficult to see. We included points to bring them out. The combination of years, or the calculation of combined batting average, is a vector addition and not the addition of fractions. Vectors have both direction and length. The direction is the number of hits over number of at bats, the traditional batting average. The length is related to the number of at bats. The plot shows that Derek Jeter’s combined batting average gets pulled more towards the second year when he had more at bats. The opposite is true for David Justice and that is why we get the reversal. This might be hard to see in the document so you can open it separately as pdf to see the design better. The link is http://bit.ly/2tP05tU Discussion question: What do you like about the plot? What are the strengths and weaknesses? What changes would you make? Is it better to put the players’ years end to end or does that hide that David Justice is better in each individual year? Does the color help or hurt? Note for discussion: The angle is the batting average, should we use white space and put an explanation into the graph? What if we had three years, how would we represent them? The labels overlap the lines, should we move them? Hook to next lesson: interaction could help us by selecting a year and turning it off or make more transparent. This question will lead to interaction section. #par(pty=&quot;s&quot;) #plot(1,type=&quot;n&quot;,xlim=c(0,700),ylim=c(0,200),xlab=&quot;At Bats&quot;,ylab=&quot;Hits&quot;,asp=1) plot(1,type=&quot;n&quot;,xlim=c(0,800),ylim=c(0,800),xlab=&quot;At Bats&quot;,ylab=&quot;Hits&quot;,asp=1) arrows(0,0,200,50,col=&quot;red&quot;) arrows(200,50,400,150,col=&quot;red&quot;) arrows(0,0,400,150,col=&quot;red&quot;) abline(0,1) #par(pty=&quot;s&quot;) #plot(1,type=&quot;n&quot;,xlim=c(0,700),ylim=c(0,200),xlab=&quot;At Bats&quot;,ylab=&quot;Hits&quot;,asp=1) plot(1,type=&quot;n&quot;,xlim=c(0,700),ylim=c(0,200),xlab=&quot;At Bats&quot;,ylab=&quot;Hits&quot;) arrows(0,0,48,12,col=&quot;red&quot;) arrows(48,12,(48+582),(183+12),col=&quot;red&quot;) arrows(0,0,(48+582),(183+12)) References "],
["interaction.html", "1.5 Interaction", " 1.5 Interaction USE MANIPULATEWIDGET WITHIN HTMLWIDGETS TO SEE IF YOU CAN GET INTERACTIVE PLOT https://www.datacamp.com/community/tutorials/15-questions-about-r-plots#q14 https://cran.r-project.org/web/packages/manipulateWidget/vignettes/manipulateWidgets.html https://github.com/rte-antares-rpackage/manipulateWidget http://gallery.htmlwidgets.org/ Background information to introduce the topic. The purpose of interaction in a visual display of data is the aid in the decision process. It can be used to explain a concept, develop conjectures or insights, and/or facilitate an exploration. This can lead to increased efficiencies and effectiveness of the decision making process. However, the science of understanding and implementing interaction is the least developed of the three areas. This is partly due to the only recent availability of software to easily develop customized interactive displays. The general principle of interaction is summarized as overview first, zoom on interest, filter to make specific, and provide details as required. Interaction can add in decision making because by interacting with the data; the analyst and decision maker can transform data, alter visual display, and then form hypothesis or alter conditions to determine impact. The biggest issue with interactivity is the ability to rapidly develop custom products. Currently this require programming skills and sophisticated software. This will change, and has to some extent with packages such as Tableau, as more tools are developed that remove the need to program. Simple example. The following site has an example of a simple interactive visualization to help understand the effectiveness of an interactive to present an idea. https://hbr.org/2014/04/what-the-scarcity-of-women-in-business-case-studies-really-looks-like Discussion ideas: What are the thoughts of the speed of the interaction? Did the animation help or hurt? What key idea did the authors want the reader to leave with from this visualization? What good make it better. Our batting problem. Without developing our own custom visualization, which we could have done in geogebra, we decided to find an existing application. There is an interactive visualization application in the geogebra library, go to https://www.geogebra.org/m/YrPAV6KK. The example uses shooting baskets but gives the same idea as the reversal we saw in our problem. We selected this interaction becomes it helps explain why the reversal occurs and the conditions under which it occurs. Discussion ideas: Have the participants move Lucy1 around by experimenting with the length and angle to determine when the reversal occurs. What is the relationship between angle and the reversal? What is the relationship between length and reversal? Is it possible to have Tom as the better shooter regardless of Lucy’s actions as long as Lucy’s first and second day performances are less than Tom’s? What are the strengths of the interaction? What would have to be done to use it for our data? "],
["conclusion.html", "1.6 Conclusion", " 1.6 Conclusion In conclusion of the module go back over the objectives and ask participants to explain and discuss. Objectives After the training, participants will: be able to define and explain visual analytics be able to describe the three important components of visual analytics be able to discuss types of unique insights that VA can provide https://www.r-bloggers.com/parallel-coordinate-plots-for-discrete-and-categorical-data-in-r-a-comparison/ "],
["Chpt2.html", "Chapter 2 Exploratory Visual Analytics", " Chapter 2 Exploratory Visual Analytics “The simple graph has brought more information to the data analyst’s mind than any other device.” — John Tukey “It isn’t accidental that when we begin to understand something we say ‘I see.’ Not ‘I hear’ or ‘I smell’” – Stephen Few “You see alot just by looking” – Yogi Berra Use the unvotes package "],
["Chpt3.html", "Chapter 3 Data Visualiztions", " Chapter 3 Data Visualiztions We describe our methods in this chapter. "],
["Chpt4.html", "Chapter 4 Interactions", " Chapter 4 Interactions library(dplyr) library(htmlwidgets) library(rpivotTable) library(crosstalk) library(DT) library(leaflet) DT::datatable(iris) library(ggplot2) library(plotly) p &lt;- ggplot(data = diamonds, aes(x = cut, fill = clarity)) + geom_bar(position = &quot;dodge&quot;) ggplotly(p) ## We recommend that you use the dev version of ggplot2 with `ggplotly()` ## Install it with: `devtools::install_github(&#39;hadley/ggplot2&#39;)` data(mtcars) rpivotTable(mtcars,rows=&quot;gear&quot;, cols=c(&quot;cyl&quot;,&quot;carb&quot;),width=&quot;100%&quot;) devtools::install_github(&quot;jcheng5/d3scatter&quot;) library(htmlwidgets) library(crosstalk) library(leaflet) library(DT) library(d3scatter) shared_mtcars &lt;- SharedData$new(mtcars) bscols(widths = c(3,NA,NA), list( filter_checkbox(&quot;cyl&quot;, &quot;Cylinders&quot;, shared_mtcars, ~cyl, inline = TRUE), filter_slider(&quot;hp&quot;, &quot;Horsepower&quot;, shared_mtcars, ~hp, width = &quot;100%&quot;), filter_select(&quot;auto&quot;, &quot;Automatic&quot;, shared_mtcars, ~ifelse(am == 0, &quot;Yes&quot;, &quot;No&quot;)) ), d3scatter(shared_mtcars, ~wt, ~mpg, ~factor(cyl), width=&quot;100%&quot;, height=250), d3scatter(shared_mtcars, ~hp, ~qsec, ~factor(cyl), width=&quot;100%&quot;, height=250) ) Cylinders 4 6 8 Horsepower Automatic plot_ly(z = ~volcano) ## No trace type specified: ## Based on info supplied, a &#39;heatmap&#39; trace seems appropriate. ## Read more about this trace type -&gt; https://plot.ly/r/reference/#heatmap "],
["case-study.html", "Chapter 5 Case Study", " Chapter 5 Case Study Kiel’s Case Study Objectives: Students will: Appreciate the need for analytic reasoning related to data transformation Consider principles of visualization Explore the value of interactive visualizations Aircraft allocation across battlespace to provide adequate close air support coverage Background You just arrived at your new deployed job in the Strategy Division Operations Assessment Team at the Combined Air Operation Center (CAOC). The Operations Group mission planners have contacted your shop with a question about whether or not additional Close Air Support (CAS) F15E aircraft are needed, and if so, how many and at which airfield(s) they should be bedded to support which region(s) in Afghanistan. Additional questions were raised concerning your team’s recommendation for how many F-15E aircraft should be dedicated to each of the five regions of the country along with a recommended flying schedule for each region based on recent data. At the moment a fighter squadron is bedded at Airfield 1 and supports Region 1 and Region 4 using 16 F-15E aircraft. Another fighter squadron is bedded at the Airfield 2 and supports Regions 2, 3, and 5 using 24 F-15E aircraft. Each F-15E sortie departs and returns at the same time each day and consists of two F-15E aircraft providing six hours of CAS support. Additionally, each of the five regions must have 24/7 CAS coverage and each F-15E sortie can only cover one region during a single mission. Sustained 24/7 coverage over a region can therefore be provided by 8 F-15E aircraft as long as the alert aircraft (those scheduled to depart for the next sortie) are not called into action supporting the current sortie more than 25% of the time. Air refueling requirements are being handled by another member of your team and are not to be considered for the purposes of this analysis. Close Air Support (CAS) in Afghanistan largely centers on supporting Troops in Contact (TIC) events. Whenever ground forces are attacked and want air support, they declare a TIC and aircraft are dispatched to support them. For the purposes of this analysis assume each TIC is supported by a sortie of two F-15Es. Due to transit time within a region, no more than two simultaneous TICs per can be reasonably handled by an F-15E sortie, and every TIC needs to be supported by F-15E aircraft either already airborne within each region or by the two (or more) F-15E aircraft sitting alert. Airborne Warning and Control System (AWACS) serves to help coordinate CAS support to all TICs, especially those TICs that go “kinetic” (when supporting aircraft drop ordinance on targets). Your boss needs to make a recommendation as to whether more air assets are needed for current operations. We start with 200 recent close air support (CAS) events. Each row of data represents a TIC event with a date, start/stop time, location (region), and whether munitions were employed. Using this data, how do you present analysis regarding the deployment of air assets to cover close air support? "],
["AppA.html", "A Lesson Handouts", " A Lesson Handouts "],
["AppB.html", "B Project", " B Project B.0.1 Introduction "],
["references.html", "References", " References "]
]
